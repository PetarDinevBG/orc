# this config is mostly based on https://jupyterhub.readthedocs.io/en/stable/reference/config-proxy.html
# top-level http config for websocket headers
# If Upgrade is defined, Connection = upgrade
# If Upgrade is empty, Connection = close
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# https://kubernetes.io/docs/concepts/services-networking/service/#nodeport
# If you set the type field to NodePort, the Kubernetes master will allocate a port from a range specified by
# --service-node-port-range flag (default: 30000-32767),
# and each Node will proxy that port (the same port number on every Node) into your Service.
# => That's why we add all nodes into upstream
upstream orc-site-test {
  # http://nginx.org/en/docs/http/load_balancing.html
  # least_conn;
  # server 194.95.75.9:30080 weight=3;
  server 194.95.75.9:30178;
  server 194.95.75.12:30178;
}

upstream gallery-test {
  server 194.95.75.9:30179;
  server 194.95.75.12:30179;
}

upstream jhub-test {
  server 194.95.75.9:30180 max_fails=0;
  server 194.95.75.12:30180 max_fails=0;
}

upstream bhub-test {
  server 194.95.75.9:30181 max_fails=0;
  server 194.95.75.12:30181 max_fails=0;
}

upstream bjhub-test {
  server 194.95.75.9:30182 max_fails=0;
  server 194.95.75.12:30182 max_fails=0;
}


# HTTP server to redirect notebooks-test.gesis.org 80 traffic to SSL/HTTPS
server {
    listen 80;
    server_name notebooks-test.gesis.org;
    access_log off;  # turn off access log
    # Tell all requests to port 80 to be 301 (permanently) redirected to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server for notebooks-test.gesis.org
server {
    listen 443;
    ssl on;
    server_name notebooks-test.gesis.org;
    ssl_certificate /etc/letsencrypt/live/notebooks-test.gesis.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/notebooks-test.gesis.org/privkey.pem;
    include snippets/ssl.conf;

    include snippets/optimization.conf;
    access_log off;  # turn off access log

    location = /favicon.ico { access_log off; log_not_found off; }

    # Managing literal requests to orc site app
    # http://flask.pocoo.org/docs/1.0/deploying/wsgi-standalone/#proxy-setups
    location / {
        proxy_pass http://orc-site-test;
        include snippets/flask.conf;
    }
    # binder gallery
    location /gallery/ {
        proxy_pass http://gallery-test;
        include snippets/flask.conf;
    }

    # Managing literal requests to the BinderHub
    location /binder/ {
        # http://www.tornadoweb.org/en/stable/guide/running.html#running-behind-a-load-balancer
        # https://serverfault.com/questions/263022/http-streaming-server-behind-nginx
        proxy_buffering off;
        proxy_pass http://bhub-test;
        include snippets/headers.conf;
        proxy_set_header X-Scheme $scheme;
    }
    # For JupyterHub of binder
    location /binder/jupyter/ {
        proxy_pass http://bjhub-test;
        include snippets/headers.conf;
        include snippets/websocket_headers.conf;
    }
    # overwrite binder logo with ORC logo
    #location = /binder/static/favicon.ico {
    #    alias /static/images/logo/logo.png;
    #}

    # redirect from old location
    rewrite ^/jupyter/(.*)$ /$1 permanent;
    # Managing literal requests to the JupyterHub front end
    location ~* ^/hub/?(.*)$ {
        proxy_buffering off;
        proxy_pass http://jhub-test;
        include snippets/headers.conf;
        include snippets/websocket_headers.conf;
        #proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Scheme $scheme;
    }
    location ~* ^/(user|services)/?(.*)$ {
        proxy_buffering off;
        proxy_pass http://jhub-test;
        include snippets/headers.conf;
        include snippets/websocket_headers.conf;
        #proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Scheme $scheme;
    }

    include snippets/ignore_fonts.conf;

    ## Private Koeln
    #allow 10.6.0.0/16;
    ## Private Mannheim
    #allow 10.2.0.0/16;
    ## Public DMZ Koeln
    #allow 193.175.238.0/24;
    ## Private DMZ Koeln
    #allow 194.95.75.0/27;
    #deny all;

    location /static/ {
        access_log off;
        root /var/www/staging;
    }

    # don't show bhub index and loading pages. instead redirect user to jhub home
    #location ~ ^/services/binder/($|v2/.*) {
    #    return 301 /;
    #}

    location = /robots.txt {
       add_header Content-Type text/plain;
       return 200 "User-agent: *\nDisallow: /\n";
    }

    include snippets/_secret.conf;
}
