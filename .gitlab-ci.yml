#image: python:3.6.3

#before_script:
#  - bundle install

#after_script:
#  - rm secrets

stages:
#  - test
  - build
  - deploy

#test_job:
#  stage: test
#  script:
#    - echo "####### TODO Running tests"
##    - pip install /builds/orc/orc/requirements.txt
#  only:
#    - dev
#  tags:
#    - orc
#  when: on_success
#  allow_failure: false
#  dependencies: []
#  retry: 1

# https://kubernetes.io/docs/concepts/configuration/overview/#container-images
# Note: You should avoid using :latest tag when deploying containers in production,
# because this makes it hard to track which version of the image is running and hard to roll back.
build_job:
  stage: build
  script:
    - |
      echo "####### Running build"
      echo "####### Building docker images on master node"
      #CI_COMMIT_SHA_8=${CI_COMMIT_SHA:0:8}
      CI_COMMIT_SHA_SHORT="$(git rev-parse --short HEAD)"
      echo $CI_COMMIT_SHA_SHORT
      if git diff HEAD~ --name-only | egrep 'orc_site/'; then
        if git diff HEAD~ --name-only | egrep --invert-match 'orc_site/deploy/|orc_site/README.md|orc_site/.dockerignore' | grep 'orc_site/'; then
          echo "####### gesiscss/orc-site:$CI_COMMIT_SHA_SHORT"
          docker login -u=$DOCKER_USERNAME -p=$DOCKER_PASSWORD
          docker build -t gesiscss/orc-site:$CI_COMMIT_SHA_SHORT orc_site/.
          docker push gesiscss/orc-site:$CI_COMMIT_SHA_SHORT
        fi;
      fi;
      if git diff HEAD~ --name-only | egrep 'storage/backup/docker/'; then
        echo "####### gesiscss/nfs-backup-orc:$CI_COMMIT_SHA_SHORT"
        docker login -u=$DOCKER_USERNAME -p=$DOCKER_PASSWORD
        docker build -t gesiscss/nfs-backup-orc:$CI_COMMIT_SHA_SHORT storage/backup/docker/.
        docker push gesiscss/nfs-backup-orc:$CI_COMMIT_SHA_SHORT
      fi;
      if git diff HEAD~ --name-only | egrep 'gesisbinder/image_cleaner/'; then
        echo "####### gesiscss/orc-image-cleaner:$CI_COMMIT_SHA_SHORT"
        docker login -u=$DOCKER_USERNAME -p=$DOCKER_PASSWORD
        docker build -t gesiscss/orc-image-cleaner:$CI_COMMIT_SHA_SHORT gesisbinder/image_cleaner/.
        docker push gesiscss/orc-image-cleaner:$CI_COMMIT_SHA_SHORT
      fi;
  only:
    - master
    - staging
  tags:
    - orc
  when: on_success
  allow_failure: false
  dependencies: []
  retry: 1

deploy_staging:
  stage: deploy
  script:
    - |
      echo "####### Running staging deploy"
      mode="fetch_co"
      #pip3 install fabric==2.4.*
      if git diff HEAD~ --name-only | egrep 'orc_site/deploy/orc-site-app-test.yaml'; then
        mode+="-orctestsite"
      fi;
      if git diff HEAD~ --name-only | egrep 'gallery/_secret_config_test.py'; then
        mode+="-gallerytestconf"
      fi;
      if git diff HEAD~ --name-only | egrep 'gallery/config_test.yaml'; then
        mode+="-gallerytestapp"
      fi;
      #if git diff HEAD~ --name-only | egrep 'gesishub/config_test.yaml|gesishub/_secret_test.yaml|gesishub/gesishub/'; then
      #  mode+="-jhubtestns"
      #fi;
      if git diff HEAD~ --name-only | egrep 'gesisbinder/config_test.yaml|gesisbinder/_secret_test.yaml|gesisbinder/gesisbinder/'; then
        mode+="-bhubtestns"
      fi;
      echo "####### mode: $mode"
      fab -H $K8S_MASTER_NODE_IP deploy -p $K8S_MASTER_NODE_PASSWORD -r $CI_COMMIT_SHA -m $mode -s
  only:
    - staging
  tags:
    - orc
  when: on_success
  environment:
    name: staging
    url: https://notebooks-test.gesis.org/
  allow_failure: false
  dependencies: []
  retry: 1

deploy_prod:
  stage: deploy
#  cache:
#    untracked: true
  script:
    - |
      echo "####### First sync github"
      URL="https://gesisnotebooks:"
      URL+=$GH_TOKEN
      URL+="@github.com/gesiscss/orc"
      git push $URL $CI_COMMIT_SHA:master

      echo "####### Running deploy"
      mode="fetch_co"
      #pip3 install fabric==2.4.*
      if git diff HEAD~ --name-only | egrep 'orc_site/deploy/orc-site-app.yaml'; then
        mode+="-orcsite"
      fi;
      if git diff HEAD~ --name-only | egrep 'gallery/_secret_config.py'; then
        mode+="-galleryconf"
      fi;
      if git diff HEAD~ --name-only | egrep 'gallery/config.yaml'; then
        mode+="-galleryapp"
      fi;
      if git diff HEAD~ --name-only | egrep 'gesishub/config.yaml|gesishub/_secret.yaml|gesishub/gesishub/'; then
        mode+="-jhubns"
      fi;
      if git diff HEAD~ --name-only | egrep 'gesisbinder/config.yaml|gesisbinder/_secret.yaml|gesisbinder/gesisbinder/'; then
        mode+="-bhubns"
      fi;
      echo "####### mode: $mode"
      fab -H $K8S_MASTER_NODE_IP deploy -p $K8S_MASTER_NODE_PASSWORD -r $CI_COMMIT_SHA -m $mode
  only:
    - master
#    - tags
  tags:
    - orc
  when: on_success
  environment:
    name: production
    url: https://notebooks.gesis.org/
  allow_failure: false
  dependencies: []
  retry: 1

deploy_nginx:
  stage: deploy
  script:
    - |
      mode="fetch_co"
      if git diff HEAD~ --name-only | egrep 'load_balancer/sites-available|load_balancer/snippets'; then
        echo "####### Reloading nginx ($CI_COMMIT_REF_NAME)"
        mode+="-config"
      fi;
      if git diff HEAD~ --name-only | egrep 'load_balancer/static'; then
        echo "####### Updating static files ($CI_COMMIT_REF_NAME)"
        mode+="-static"
      fi;
      fab -H $K8S_BASE_WORKER_IP nginx -p $K8S_BASE_WORKER_PASSWORD -b $CI_COMMIT_REF_NAME -r $CI_COMMIT_SHA -m $mode
  only:
    - staging
    - master
  tags:
    - orc
  when: on_success
#  when: manual
  allow_failure: false
  dependencies: []
  retry: 1
